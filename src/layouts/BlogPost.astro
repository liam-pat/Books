---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import LeftSidebar from "../components/LeftSideBar.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

const pageUrl = new URL(Astro.request.url);
const currentPage = pageUrl.pathname;
---

<html lang="en">
    <head>
        <BaseHead title={title} description={description} />
        <style>
            main {
                width: calc(100% - 2em);
                max-width: 100%;
                margin: 0;
            }
            .hero-image {
                width: 100%;
            }
            .hero-image img {
                display: block;
                margin: 0 auto;
                border-radius: 12px;
                box-shadow: var(--box-shadow);
                object-fit: cover;
                width: 900px;
                height: 500px;
                cursor: pointer;
            }
            .prose {
                font-size: 16px;
                width: 1000px;
                max-width: calc(100% - 2em);
                margin: auto;
                padding: 1em;
                color: rgb(var(--gray-dark));
            }
            .title {
                margin-bottom: 1em;
                padding: 1em 0;
                text-align: center;
                line-height: 1;
            }
            .title h1 {
                margin: 0 0 0.5em 0;
            }
            .date {
                margin-bottom: 0.5em;
                color: rgb(var(--gray));
            }
            .last-updated-on {
                font-style: italic;
            }

            .grid-sidebar {
                height: 100vh;
                position: sticky;
            }
            #grid-left {
                position: fixed;
                background-color: var(--theme-bg);
                z-index: 10;
                display: none;
                max-width: 190px;

                overflow:hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
            }
            @media (min-width: 90em) {
                #grid-left {
                    display: flex;
                    padding-left: 2rem;
                    position: fixed;
                    grid-column: 1;
                }
            }
        </style>
    </head>

    <body>
        <Header />
        <div id="grid-left" class="grid-sidebar" title="Site Navigation">
            <LeftSidebar title={title} currentPage={currentPage} />
        </div>
        <main>
            <article>
                <div class="hero-image">
                    {
                        heroImage && (
                            <img width={1020} height={510} src={heroImage} alt=""/>
                        )
                    }
                </div>
                <div class="prose" id="write">
                    <div class="title">
                        <div class="date">
                            <FormattedDate date={pubDate} />
                            {
                                updatedDate && (
                                    <div class="last-updated-on">
                                        Last updated on{" "}
                                        <FormattedDate date={updatedDate} />
                                    </div>
                                )
                            }
                        </div>
                        <h1>{title}</h1>
                        <hr />
                    </div>
                    <slot />
                </div>
            </article>
        </main>
        <Footer />
    </body>
</html>
